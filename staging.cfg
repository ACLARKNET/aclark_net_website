[buildout]
# Extends import buildout config files from elsewhere
extends = 
    http://dist.aclark.net/build/plone/4.1.x/zeo.cfg
    http://good-py.appspot.com/release/collective.xdv/1.0

# Parts define what this buildout does
parts += blog trac xdv staging production filestorage-to-production blobstorage-to-production

[plone]
# Eggs are Python packages
eggs += 
# "New style" theming in Plone
    collective.xdv
# "New style" template overrides
    z3c.jbot

# Plone is a modern web application that uses the Zope Toolkit 
# internally to provide complex functionality in a manageable way.
# 
# The Zope Toolkit features the Zope component architecure; and 
# components are configured via the Zope Configuration Markup Language (ZCML).
#
# Rather than create a Python package to do simple customizations, we add
# our ZCML here and the plone.recipe.zope2instance will add it to our 
# Zope 2 instance configuration file(s) for us whenever we run bin/buildout.
zcml-additional =
# Add static resource dir
    <configure
        xmlns:browser="http://namespaces.zope.org/browser"
    >
    <browser:resourceDirectory
        name="static"
        directory="${buildout:directory}/static"
    />
# Add custom templates dir
    <include
        package="z3c.jbot"
        file="meta.zcml"
    />
    <browser:jbot
        directory="${buildout:directory}/templates"
    />
    </configure>
http-address = ${ports:plone}
zeo-address = ${ports:zeo}
zeo-client = true

[blog]
# Compile the blog theme
recipe = plone.recipe.command
command = 
    bin/xdvcompiler -r theme/rules/blog.xml -t theme/templates/blog.html -o theme/blog.xsl
update-command = ${:command}

[trac]
# Compile the trac theme
recipe = plone.recipe.command
command = 
    bin/xdvcompiler -r theme/rules/trac.xml -t theme/templates/trac.html -o theme/trac.xsl
update-command = ${:command}

# This creates bin/xdvcompiler
[xdv]
recipe = zc.recipe.egg

# Hostout makes Fabric integration easy
[staging]
recipe = collective.hostout
host = aclark.net
path = /srv/staging

[production]
recipe = collective.hostout
host = aclark.net
path = /srv/aclark_net_website

[zeo]
zeo-address = ${plone:zeo-address}

[supervisor]
port = ${ports:supervisor}
serverurl = http://${hosts:localhost}:${ports:supervisor}

[ports]
supervisor = 9003
plone = 8083
zeo = 8101

[hosts]
localhost = 127.0.0.1

# Create scripts to deploy staging data to production.
# Be VERY careful with this. You could easily overwrite your
# live production data if you either forget to use the script
# option, or accidentally run the bin/rsync-filestorage-to-production
# script without stopping the production site first.
[filestorage-to-production]
recipe = collective.recipe.rsync
source = var/filestorage/Data.fs
target = ../aclark_net_website/var/filestorage/Data.fs
script = true

[blobstorage-to-production]
recipe = collective.recipe.rsync
source = var/blobstorage/
target = ../aclark_net_website/var/blobstorage/
script = true
